---
title: "Trivariate Viz"

author: Phoebe Pan
date: 4/24/2025
format: 
  html:
    code-fold: true
    theme: cosmo
    toc: true
    number-sections: true
    warning: false
---

This section showcases my best trivariate visualization, created and refined over the semester as I developed a deeper understanding of effective visual communication. The goal was to clearly represent the relationship among three variables within a single plot using thoughtful encoding and design.

The data for the first plot comes from the SAT dataset (sat.csv), available at mac-stat.github.io. It includes information on average SAT scores, participation rates, and education-related funding across U.S. states, making it ideal for exploring how educational outcomes relate to policy and demographic factors.

The data for the second plot comes from Yahoo Finance and includes daily stock prices for Netflix and 13 affiliated companies from 2018 to 2022. After importing and cleaning the data, I normalized the adjusted closing prices to enable meaningful comparisons across firms with different stock price scales. In the final plot, Date is mapped to the x-axis, Normalized Price to the y-axis, and symbol (company name) is encoded by color. 

```{r setup, include=FALSE}
library(ggplot2)
library(readr)
library(tidymodels)
library(tidyverse)
```

```{r, include=FALSE}
education <- read.csv("https://mac-stat.github.io/data/sat.csv")
```

```{r echo = FALSE,warning=FALSE, error=FALSE, message=FALSE}
# data imports

WBD_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/WBD_daily_data.csv")

V_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/V_daily_data.csv")

UPS_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/UPS_daily_data.csv")

SONY_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/SONY_daily_data.csv")

PARA_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/PARA_daily_data.csv")

NVDA_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/NVDA_daily_data.csv")

NFLX_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/NFLX_daily_data.csv")

MA_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/MA_daily_data.csv")

LUMN_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/LUMN_daily_data.csv")

INTC_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/INTC_daily_data.csv")

FDX_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/FDX_daily_data.csv")

CRM_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/CRM_daily_data.csv")

AMZN_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/AMZN_daily_data.csv")

AKAM_stock<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/affiliated companies/AKAM_daily_data.csv")

data_twitter_sentiment<-read_csv("/Users/piipan/Documents/GitHub/comp112/portfolio-PiiPan/data/ds solo project/twitter sentiments/data_2018-2022.csv")
# data cleaning: adjust time span
filter_stock_data <- function(data) {
    data %>% 
    mutate(Date = as.Date(Date)) %>%
    filter(Date >= as.Date("2018-01-02") & Date <= as.Date("2022-07-08"))
}

WBD_stock  <- filter_stock_data(WBD_stock)
V_stock    <- filter_stock_data(V_stock)
UPS_stock  <- filter_stock_data(UPS_stock)
SONY_stock <- filter_stock_data(SONY_stock)
PARA_stock <- filter_stock_data(PARA_stock)
NVDA_stock <- filter_stock_data(NVDA_stock)
NFLX_stock <- filter_stock_data(NFLX_stock)
MA_stock   <- filter_stock_data(MA_stock)
LUMN_stock <- filter_stock_data(LUMN_stock)
INTC_stock <- filter_stock_data(INTC_stock)
FDX_stock  <- filter_stock_data(FDX_stock)
CRM_stock  <- filter_stock_data(CRM_stock)
AMZN_stock <- filter_stock_data(AMZN_stock)
AKAM_stock <- filter_stock_data(AKAM_stock)
# data cleaning: combine the stock data
normalize_and_label <- function(df, ticker) {
  df %>%
    mutate(
      Date = as.Date(Date),
      normalized = `Adj Close` / first(`Adj Close`),
      symbol = ticker
    )
}

all_stocks <- bind_rows(
  normalize_and_label(WBD_stock,  "WBD"),
  normalize_and_label(V_stock,    "V"),
  normalize_and_label(UPS_stock,  "UPS"),
  normalize_and_label(SONY_stock, "SONY"),
  normalize_and_label(PARA_stock, "PARA"),
  normalize_and_label(NVDA_stock, "NVDA"),
  normalize_and_label(NFLX_stock, "NFLX"),
  normalize_and_label(MA_stock,   "MA"),
  normalize_and_label(LUMN_stock, "LUMN"),
  normalize_and_label(INTC_stock, "INTC"),
  normalize_and_label(FDX_stock,  "FDX"),
  normalize_and_label(CRM_stock,  "CRM"),
  normalize_and_label(AMZN_stock, "AMZN"),
  normalize_and_label(AKAM_stock, "AKAM")
)
```


```{r}
ggplot(education, aes(x = salary, y = expend, color = sat)) +
  geom_point(size = 2.5) +
  scale_color_gradient(low = "lightblue", high = "darkblue") +
  labs(
    title = "Teacher Salary and School Expenditure by State",
    subtitle = "Point color represents average SAT score",
    x = "Estimated average annual teacher salary",
    y = "Expenditure per pupil",
    color = "SAT Score",
    caption = "Source: ICA"
  ) +
  theme_minimal(base_size = 14)
```




```{r,warning=FALSE, error=FALSE, message=FALSE}
ggplot(all_stocks, aes(x = Date, y = normalized, color = symbol)) +
  geom_line(size = 0.4) +
  labs(title = "Normalized Stock Price Trends",
       subtitle = "Netflix & Affiliated Companies from 2018 to 2022",
       caption = "Source: Yahoo Finance",
       y = "Normalized Price",
       x = "Date") +
  scale_color_viridis_d(option = "turbo") +
  theme_minimal()
```

